#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/backlight.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2

/ {
    combos{
        compatible = "zmk,combos";
        combo_reset {
            timeout-ms = <50>;
            key-positions = <0 68  85>;
            bindings = <&reset>;
        };
        combo_bootl {
            timeout-ms = <50>;
            key-positions = <0 51 85>;
            bindings = <&bootloader>;
        };
        combo_reset_r {
            timeout-ms = <50>;
            key-positions = <50 67 101>;
            bindings = <&reset>;
        };
        combo_bootl_r {
            timeout-ms = <50>;
            key-positions = <33 67 101>;
            bindings = <&bootloader>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC        &kp F1       &kp F2       &kp F3       &kp F4       &kp F5       &kp F6           &kp F7       &kp F8       &kp F9       &kp F10      &kp F11      &kp F12      &none        &none        &none        &none
                &kp GRAVE      &kp N1       &kp N2       &kp N3       &kp N4       &kp N5       &kp N6           &kp N7       &kp N8       &kp N9       &kp N0       &kp MINUS    &kp EQUAL    &kp BSPC     &none        &kp INS      &kp HOME
                &kp TAB        &kp Q        &kp W        &kp E        &kp R        &kp T        &none            &kp Y        &kp U        &kp I        &kp O        &kp P        &kp LBKT     &kp RBKT     &kp BSLH     &kp DEL      &kp END    
                &lt LOWER CAPS &kp A        &kp S        &kp D        &kp F        &kp G        &none            &kp H        &kp J        &kp K        &kp L        &kp SEMI     &kp APOS     &kp RET      &none        &kp C_PP     &kp C_VOL_UP
                &kp LSHFT      &kp Z        &kp X        &kp C        &kp V        &kp B        &none            &kp N        &kp M        &kp COMMA    &kp DOT      &kp FSLH     &kp RSHFT    &none        &none        &kp UP       &kp C_VOL_DN
                &kp LCTRL      &kp LWIN     &kp LALT     &none        &kp SPACE    &none        &none            &kp SPACE    &kp RALT     &kp RWIN     &kp RCTL     &none        &none        &kp LEFT     &none        &kp DOWN     &kp RIGHT

            >;
        };

        lower_layer {
            bindings = <
                &bl BL_TOG     &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5 &bt BT_SEL 6    &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans      &trans      &trans
                &bl BL_INC     &trans       &trans       &trans       &trans       &trans       &trans          &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans      &trans      &trans
                &bl BL_DEC     &trans       &trans       &trans       &trans       &trans       &trans          &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans      &trans      &trans
                &trans         &trans       &trans       &trans       &trans       &trans       &trans          &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans      &trans      &trans
                &trans         &trans       &trans       &trans       &trans       &trans       &trans          &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans      &trans      &trans
                &trans         &trans       &trans       &trans       &trans       &trans       &trans          &trans       &trans       &trans       &trans       &trans       &trans       &kp C_PREV   &trans      &trans      &kp C_NEXT

            >;
        };

        raise_layer {
            bindings = <
                &reset         &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5 &bt BT_SEL 6    &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans      &trans      &trans
                &bootloader    &trans       &trans       &trans       &trans       &trans       &trans          &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans      &trans      &trans
                &trans         &trans       &trans       &trans       &trans       &trans       &trans          &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans      &trans      &trans
                &trans         &trans       &trans       &trans       &trans       &trans       &trans          &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans      &trans      &trans
                &trans         &trans       &trans       &trans       &trans       &trans       &trans          &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans      &trans      &trans
                &trans         &trans       &trans       &trans       &trans       &trans       &trans          &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans      &trans      &trans

            >;
        };
    };
};